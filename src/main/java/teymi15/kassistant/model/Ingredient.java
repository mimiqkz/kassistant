package teymi15.kassistant.model;

import org.hibernate.annotations.Cascade;
import org.springframework.stereotype.Controller;
import teymi15.kassistant.SQLsafety.SQLInjectionSafe;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
/**
 * The program allows user to search for recipe with the matching name. For
 * example, "Apple pie", "Brocoli soup", "Chocolate Cake" , etc.
 *
 * @author Nu Phan Quynh Do
 * @author Alexander Freyr Sveinsson
 * @author Alexandra Mj√∂ll Young
 * @version 1.0
 * @since 2017-09-20
 */
//The object class of ingredient
//make this as an entity in the database
@Entity
@Table(name = "Ingredient")
public class Ingredient {

    //id is the primary key and can be generated by the database
    @Id
    @Column(name = "ingredientId")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

     private int price; //Using different currency

    @NotNull
    @Size(min = 1, message = "The name of the ingredient must be at least {min} letter.")
    private @SQLInjectionSafe String name; //Name of the ingredient e.g cherry tomato, apple etc.

    @Size(min = 1, message = "The name of the location must be at least {min} letter.")
    private @SQLInjectionSafe String location; //Location of the store e.g Granda, Kringlan etc

    @Size(min = 1, message = "The name of the store must be at least {min} letter.")
    private @SQLInjectionSafe String store; //The name of the store

    @Size(min = 1, message = "The description must be at least {min} letter.")
    private @SQLInjectionSafe String description;

    private String photoURL; //The URL of the photo, for now user must upload in image

    //many to many connection between the recipes and ingredients
    //mapped by the Set ingredients in the Recipe controller
    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    private Set<Recipe> recipes = new HashSet<>();

    /**
     * The constructor
     * @param name name of the ingredient
     * @param description the location of the store
     */
    public Ingredient( String name, String description) {
        this.name = name;
        this.description = description;
    }

    public Ingredient() {
    }

    public Ingredient(Integer id) {
        this.id = id;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "price")
    public int getPrice() {
        return price;
    }

    public void setPrice(int price) {
        System.out.println("price before");
        this.price = price;
        System.out.println("price after");
        System.out.println(this.price);

    }

    @Column(name = "name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "location")
    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Column(name = "store")
    public String getStore() {
        return store;
    }

    public void setStore(String store) {
        this.store = store;
    }

    public Set<Recipe> getRecipes() {
        return recipes;
    }

    public void addRecipe(Recipe r) {
        recipes.add(r);
    }

    public void removeRecipe(Recipe r){recipes.remove(r);}

    public void setRecipes(Set<Recipe> recipes) {
        this.recipes = recipes;
    }

    @Column(name = "photo")
    public String getPhotoURL() {
        return photoURL;
    }

    public void setPhotoURL(String photoURL) {
        this.photoURL = photoURL;
    }

    @Column(name = "description")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
}
